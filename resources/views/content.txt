public function index(){

    }
    public function create(){

    }
    public function store(Request $request){

    }
    public function edit($id){

    }
    public function update(Request $request, $id){
    	
    }

$hashed = Hash::make($password);  for laravel

<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTrigger extends Migration
{
    /**
     * Run the migrations.
     *$hashed = Hash::make($password); for laravel
     * @return void
     */
    public function up()
    {
         DB::unprepared('CREATE TRIGGER bftudentins 
            BEFORE INSERT ON `students` 
            FOR EACH ROW
            BEGIN
            INSERT INTO `users` SET name=new.name,email="your",password=new.studentid;
            END');
        // DB::unprepared('CREATE TRIGGER beforereturn BEFORE UPDATE ON `book_issues` FOR EACH ROW
        // BEGIN
        // UPDATE `bookkeepers` SET bookkeepers.status = 0 WHERE bookkeepers.barcode = OLD.barcode;
        // END');
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
         DB::unprepared('DROP TRIGGER `bftudentins`');
         // DB::unprepared('DROP TRIGGER `beforereturn`');
    }


$id = \Auth::id();
        echo $id;
        exit();



        bindec() - Binary to decimal
decoct() - Decimal to octal
dechex() - Decimal to hexadecimal
base_convert() - Convert a number between arbitrary bases
printf() - Output a formatted string, using %b, %032b or %064b as the format
sprintf(), using %b, %032b or %064b as the format


https://wedevs.com/about-us/


$accessStatus=Role::getAccessStatus();
if($accessStatus[2]==1){

        }else{

        }

SELECT menus.name as muneName,role_menu.menu_id,role_menu.role_id,roles.name as roleName
from menus
INNER JOIN role_menu on role_menu.menu_id=menus.id
INNER JOIN roles on role_menu.role_id=roles.id



select * From (SELECT menus.id,menus.name as muneName,menus.parentid,menus.url,role_menu.menu_id,role_menu.role_id,roles.name as roleName
from menus
INNER JOIN role_menu on role_menu.menu_id=menus.id
INNER JOIN roles on role_menu.role_id=roles.id) as rolemenu
INNER join (SELECT users.name,user_role.user_id,user_role.role_id
FROM users
INNER JOIN user_role on users.id=user_role.user_id
INNER JOIN roles on user_role.role_id=roles.id) as userrole on userrole.role_id=rolemenu.role_id
WHERE userrole.user_id=2 AND rolemenu.parentid=1