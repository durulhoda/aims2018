 <a class="btn btn-info btn-lg btn-block" href="{{ route('register') }}">{{ __('Register') }}</a>

public function index(){

    }
    public function create(){

    }
    public function store(Request $request){

    }
    public function edit($id){

    }
    public function update(Request $request, $id){
    	
    }

$hashed = Hash::make($password);  for laravel

<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTrigger extends Migration
{
    /**
     * Run the migrations.
     *$hashed = Hash::make($password); for laravel
     * @return void
     */
    public function up()
    {
         DB::unprepared('CREATE TRIGGER bftudentins 
            BEFORE INSERT ON `students` 
            FOR EACH ROW
            BEGIN
            INSERT INTO `users` SET name=new.name,email="your",password=new.studentid;
            END');
        // DB::unprepared('CREATE TRIGGER beforereturn BEFORE UPDATE ON `book_issues` FOR EACH ROW
        // BEGIN
        // UPDATE `bookkeepers` SET bookkeepers.status = 0 WHERE bookkeepers.barcode = OLD.barcode;
        // END');
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
         DB::unprepared('DROP TRIGGER `bftudentins`');
         // DB::unprepared('DROP TRIGGER `beforereturn`');
    }

SELECT roles.*,menus.name as menuName FROM `roles`
INNER JOIN role_menu ON roles.id=role_menu.role_id
INNER JOIN menus ON role_menu.menu_id=menus.id
WHERE roles.id=2




https://laravelcode.com/post/laravel-55-get-last-inserted-id-with-example



SELECT roles.*,institute.name FROM roles
LEFT JOIN institute ON roles.instituteid=institute.id
WHERE roles.rolecreatorid=1

SELECT roles.id,roles.name,roles.rolecreatorid,vroles.roleCreatorName,roles.instituteid,institute.name as institueName FROM `roles`
        INNER JOIN institute ON roles.instituteid=institute.id
        INNER JOIN (SELECT roles.id,roles.name as roleCreatorName,roles.rolecreatorid,roles.instituteid FROM `roles`) AS vroles ON vroles.id=roles.rolecreatorid
        WHERE roles.rolecreatorid=?