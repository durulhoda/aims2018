

public function index(){

    }
    public function create(){

    }
    public function store(Request $request){
        
    }
    public function edit($id){

    }
    public function update(Request $request, $id){
    	
    }

$hashed = Hash::make($password);  for laravel

<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTrigger extends Migration
{
    /**
     * Run the migrations.
     *$hashed = Hash::make($password); for laravel
     * @return void
     */
    public function up()
    {
         DB::unprepared('CREATE TRIGGER bftudentins 
            BEFORE INSERT ON `students` 
            FOR EACH ROW
            BEGIN
            INSERT INTO `users` SET name=new.name,email="your",password=new.studentid;
            END');
        // DB::unprepared('CREATE TRIGGER beforereturn BEFORE UPDATE ON `book_issues` FOR EACH ROW
        // BEGIN
        // UPDATE `bookkeepers` SET bookkeepers.status = 0 WHERE bookkeepers.barcode = OLD.barcode;
        // END');
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
         DB::unprepared('DROP TRIGGER `bftudentins`');
         // DB::unprepared('DROP TRIGGER `beforereturn`');
    }

                            $option[1]="Read";
                            $option[2]="create";
                            $option[4]="Up";
                            $option[8]="Del";
                            $option[16]="Print";
                            $option[32]="Down";




$rh=new RoleHelper();
        $menuid=$rh->getMenuId('permission');
        $sidebarMenu=$rh->getMenu();
        $permission=$rh->getPermission($menuid);
        if($permission[2]==1){
           
        }else{
            return redirect('permission');   
        }



transaction is Applied on Student Registration




CREATE TABLE IF NOT EXISTS new_table LIKE existing_table;
 
INSERT new_table
SELECT * FROM existing_table;







